-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2021-09-15 17:42:15 AST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

-- Student name: Sean Michael
-- Student ID: 32185456

SET ECHO ON
SPOOL mm_schema_output.txt


DROP TABLE assessment CASCADE CONSTRAINTS;

DROP TABLE attendance CASCADE CONSTRAINTS;

DROP TABLE centre CASCADE CONSTRAINTS;

DROP TABLE class_registration CASCADE CONSTRAINTS;

DROP TABLE class_type CASCADE CONSTRAINTS;

DROP TABLE facility CASCADE CONSTRAINTS;

DROP TABLE mm_class CASCADE CONSTRAINTS;

DROP TABLE mm_member CASCADE CONSTRAINTS;

DROP TABLE staff CASCADE CONSTRAINTS;

DROP TABLE staff_role CASCADE CONSTRAINTS;

DROP TABLE staffing CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE assessment (
    assess_date    DATE NOT NULL,
    mem_no         NUMBER(10) NOT NULL,
    assess_weight  NUMBER(4, 1) NOT NULL,
    assess_bp      NUMBER(3) NOT NULL,
    assess_bmi     NUMBER(3) NOT NULL,
    assess_vomax   NUMBER(3) NOT NULL,
    staff_id       NUMBER(5) NOT NULL
);

COMMENT ON COLUMN assessment.assess_date IS
    'Date of assessment';

COMMENT ON COLUMN assessment.mem_no IS
    'Member number';

COMMENT ON COLUMN assessment.assess_weight IS
    'Weight of member in assessment';

COMMENT ON COLUMN assessment.assess_bp IS
    'Blood pressure of member in assessment';

COMMENT ON COLUMN assessment.assess_bmi IS
    'BMI of member in assessment';

COMMENT ON COLUMN assessment.assess_vomax IS
    'VO2 max of member in assessment';

COMMENT ON COLUMN assessment.staff_id IS
    'Staff ID';

ALTER TABLE assessment ADD CONSTRAINT assessment_pk PRIMARY KEY ( assess_date,
                                                                  mem_no );

CREATE TABLE attendance (
    session_date         DATE NOT NULL,
    class_no             NUMBER(5) NOT NULL,
    cent_id              NUMBER(5) NOT NULL,
    mem_no               NUMBER(10) NOT NULL,
    session_attendance   CHAR(1) NOT NULL,
    mm_class_fac_roomno  NUMBER(5) NOT NULL
);

COMMENT ON COLUMN attendance.session_date IS
    'Date of the session of a class';

COMMENT ON COLUMN attendance.class_no IS
    'Class number';

COMMENT ON COLUMN attendance.cent_id IS
    'Center ID';

COMMENT ON COLUMN attendance.mem_no IS
    'Member number';

COMMENT ON COLUMN attendance.session_attendance IS
    'If the member attended the session, Y for yes or N for no';

ALTER TABLE attendance
    ADD CONSTRAINT class_session_pk PRIMARY KEY ( session_date,
                                                  class_no,
                                                  cent_id,
                                                  mem_no );

CREATE TABLE centre (
    cent_id        NUMBER(5) NOT NULL,
    cent_name      VARCHAR2(50) NOT NULL,
    cent_street    VARCHAR2(50) NOT NULL,
    cent_town      VARCHAR2(50) NOT NULL,
    cent_postcode  NUMBER(4) NOT NULL,
    cent_phoneno   NUMBER(10) NOT NULL,
    staff_id       NUMBER(5) NOT NULL
);

COMMENT ON COLUMN centre.cent_id IS
    'Center ID';

COMMENT ON COLUMN centre.cent_name IS
    'Center name';

COMMENT ON COLUMN centre.cent_street IS
    'Centre Address Street';

COMMENT ON COLUMN centre.cent_town IS
    'Centre Address Town';

COMMENT ON COLUMN centre.cent_postcode IS
    'Centre post code ';

COMMENT ON COLUMN centre.cent_phoneno IS
    'Centre phone number';

COMMENT ON COLUMN centre.staff_id IS
    'Staff ID';

CREATE UNIQUE INDEX centre__idx ON
    centre (
        staff_id
    ASC );

ALTER TABLE centre ADD CONSTRAINT centre_pk PRIMARY KEY ( cent_id );

CREATE TABLE class_registration (
    mem_no                NUMBER(10) NOT NULL,
    class_no              NUMBER(5) NOT NULL,
    cent_id               NUMBER(5) NOT NULL,
    reg_pay_date          DATE NOT NULL,
    reg_total_attendance  NUMBER(3) NOT NULL,
    mm_class_fac_roomno   NUMBER(5) NOT NULL,
    reg_id                NUMBER(4) NOT NULL
);

COMMENT ON COLUMN class_registration.mem_no IS
    'Member number';

COMMENT ON COLUMN class_registration.class_no IS
    'Class number';

COMMENT ON COLUMN class_registration.cent_id IS
    'Center ID';

COMMENT ON COLUMN class_registration.reg_pay_date IS
    'Date of payment of registration';

COMMENT ON COLUMN class_registration.reg_total_attendance IS
    'Total times the member has attended a session of the class';

COMMENT ON COLUMN class_registration.reg_id IS
    'Registration ID';

ALTER TABLE class_registration
    ADD CONSTRAINT payment_pk PRIMARY KEY ( mem_no,
                                            class_no,
                                            cent_id );

ALTER TABLE class_registration
    ADD CONSTRAINT registration_id UNIQUE ( cent_id,
                                            class_no,
                                            mem_no );

CREATE TABLE class_type (
    classtype_id    NUMBER(3) NOT NULL,
    classtype_desc  VARCHAR2(100) NOT NULL
);

COMMENT ON COLUMN class_type.classtype_id IS
    'Class type ID';

COMMENT ON COLUMN class_type.classtype_desc IS
    'Class type description';

ALTER TABLE class_type ADD CONSTRAINT class_type_pk PRIMARY KEY ( classtype_id );

CREATE TABLE facility (
    fac_roomno    NUMBER(5) NOT NULL,
    cent_id       NUMBER(5) NOT NULL,
    fac_name      VARCHAR2(50) NOT NULL,
    fac_desc      VARCHAR2(100) NOT NULL,
    fac_capacity  NUMBER(3) NOT NULL
);

COMMENT ON COLUMN facility.fac_roomno IS
    'Facility room number';

COMMENT ON COLUMN facility.cent_id IS
    'Center ID';

COMMENT ON COLUMN facility.fac_name IS
    'Facility name';

COMMENT ON COLUMN facility.fac_desc IS
    'Facility description';

COMMENT ON COLUMN facility.fac_capacity IS
    'Facility max capacity';

ALTER TABLE facility ADD CONSTRAINT facility_pk PRIMARY KEY ( fac_roomno,
                                                              cent_id );

CREATE TABLE mm_class (
    class_no               NUMBER(5) NOT NULL,
    cent_id                NUMBER(5) NOT NULL,
    class_startdate        DATE NOT NULL,
    class_starttime        CHAR(5) NOT NULL,
    class_maxparticipants  NUMBER(3) NOT NULL,
    class_numofsessions    NUMBER(3) NOT NULL,
    class_cost             NUMBER(5) NOT NULL,
    class_gendered         CHAR(1) NOT NULL,
    fac_roomno             NUMBER(5) NOT NULL,
    classtype_id           NUMBER(3) NOT NULL
);

COMMENT ON COLUMN mm_class.class_no IS
    'Class number';

COMMENT ON COLUMN mm_class.cent_id IS
    'Center ID';

COMMENT ON COLUMN mm_class.class_startdate IS
    'Date of first session of the class';

COMMENT ON COLUMN mm_class.class_starttime IS
    'Time of first session of the class';

COMMENT ON COLUMN mm_class.class_maxparticipants IS
    'Class maximum number of participants';

COMMENT ON COLUMN mm_class.class_numofsessions IS
    'The number of sessions a class has';

COMMENT ON COLUMN mm_class.class_cost IS
    'Cost of a class';

COMMENT ON COLUMN mm_class.class_gendered IS
    'G for gendered class, U for unrestricted class';

COMMENT ON COLUMN mm_class.fac_roomno IS
    'Facility room number';

COMMENT ON COLUMN mm_class.classtype_id IS
    'Class type ID';

ALTER TABLE mm_class
    ADD CONSTRAINT class_pk PRIMARY KEY ( class_no,
                                          cent_id,
                                          fac_roomno );

CREATE TABLE mm_member (
    mem_no        NUMBER(10) NOT NULL,
    mem_name      VARCHAR2(50) NOT NULL,
    mem_address   VARCHAR2(50) NOT NULL,
    mem_phoneno   NUMBER(10) NOT NULL,
    mem_joindate  DATE,
    cent_id       NUMBER(5) NOT NULL,
    mem_no1       NUMBER(10)
);

COMMENT ON COLUMN mm_member.mem_no IS
    'Member number';

COMMENT ON COLUMN mm_member.mem_name IS
    'Member name';

COMMENT ON COLUMN mm_member.mem_address IS
    'Member address';

COMMENT ON COLUMN mm_member.mem_phoneno IS
    'Member phone number';

COMMENT ON COLUMN mm_member.mem_joindate IS
    'Member join date';

COMMENT ON COLUMN mm_member.cent_id IS
    'Center ID';

COMMENT ON COLUMN mm_member.mem_no1 IS
    'Member number';

ALTER TABLE mm_member ADD CONSTRAINT member_pk PRIMARY KEY ( mem_no );

CREATE TABLE staff (
    staff_id         NUMBER(5) NOT NULL,
    staff_givenname  VARCHAR2(50) NOT NULL,
    staff_famname    VARCHAR2(50) NOT NULL,
    staff_mobileno   NUMBER(10) NOT NULL,
    staff_startdate  DATE NOT NULL,
    staff_phoneno    NUMBER(10) NOT NULL,
    cent_id          NUMBER(5) NOT NULL,
    staffrole_code   CHAR(1) NOT NULL
);

COMMENT ON COLUMN staff.staff_id IS
    'Staff ID';

COMMENT ON COLUMN staff.staff_givenname IS
    'Staff given (first) name';

COMMENT ON COLUMN staff.staff_famname IS
    'Staff family (last) name';

COMMENT ON COLUMN staff.staff_mobileno IS
    'Staff mobile number';

COMMENT ON COLUMN staff.staff_startdate IS
    'Date that the staff started working in the centre';

COMMENT ON COLUMN staff.staff_phoneno IS
    'Staff phone number they can be contacted on';

COMMENT ON COLUMN staff.cent_id IS
    'Center ID';

COMMENT ON COLUMN staff.staffrole_code IS
    'Code for the role of the staff:
Administration (A)
Cleaner (C)
Instructor Dry (D)
Instructor Pool (P)
Manager (only one per centre) (M)
Sales (S)
Security (T)
';

ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( staff_id );

CREATE TABLE staff_role (
    staffrole_code  CHAR(1) NOT NULL,
    staffrole_desc  VARCHAR2(100) NOT NULL
);

ALTER TABLE staff_role
    ADD CONSTRAINT role_codes CHECK ( staffrole_code IN ( 'A', 'C', 'D', 'M', 'P',
                                                          'S', 'T' ) );

COMMENT ON COLUMN staff_role.staffrole_code IS
    'Code for the role of the staff:
Administration (A)
Cleaner (C)
Instructor Dry (D)
Instructor Pool (P)
Manager (only one per centre) (M)
Sales (S)
Security (T)
';

COMMENT ON COLUMN staff_role.staffrole_desc IS
    'Staff role description';

ALTER TABLE staff_role ADD CONSTRAINT staff_role_pk PRIMARY KEY ( staffrole_code );

CREATE TABLE staffing (
    class_no                    NUMBER(5) NOT NULL,
    cent_id                     NUMBER(5) NOT NULL,
    staff_id                    NUMBER(5) NOT NULL,
    staffing_leader             CHAR(1) NOT NULL,
    staffing_firstaidcertified  CHAR(1) NOT NULL,
    mm_class_fac_roomno         NUMBER(5) NOT NULL
);

COMMENT ON COLUMN staffing.class_no IS
    'Class number';

COMMENT ON COLUMN staffing.cent_id IS
    'Center ID';

COMMENT ON COLUMN staffing.staff_id IS
    'Staff ID';

COMMENT ON COLUMN staffing.staffing_leader IS
    'If staff is the leader for the class, Y for yes or N for no';

COMMENT ON COLUMN staffing.staffing_firstaidcertified IS
    'If staff in the class is first aid certified, Y for yes or N for no';

CREATE UNIQUE INDEX staffing__idx ON
    staffing (
        class_no
    ASC,
        cent_id
    ASC );

CREATE UNIQUE INDEX staffing__idxv1 ON
    staffing (
        class_no
    ASC,
        cent_id
    ASC,
        mm_class_fac_roomno
    ASC );

ALTER TABLE staffing
    ADD CONSTRAINT class_staff_pk PRIMARY KEY ( class_no,
                                                cent_id,
                                                staff_id );

ALTER TABLE facility
    ADD CONSTRAINT centre_facility FOREIGN KEY ( cent_id )
        REFERENCES centre ( cent_id );

ALTER TABLE mm_member
    ADD CONSTRAINT centre_member FOREIGN KEY ( cent_id )
        REFERENCES centre ( cent_id );

ALTER TABLE staff
    ADD CONSTRAINT centre_staff FOREIGN KEY ( cent_id )
        REFERENCES centre ( cent_id );

ALTER TABLE attendance
    ADD CONSTRAINT class_classession FOREIGN KEY ( class_no,
                                                   cent_id,
                                                   mm_class_fac_roomno )
        REFERENCES mm_class ( class_no,
                              cent_id,
                              fac_roomno );

ALTER TABLE staffing
    ADD CONSTRAINT class_classstaff FOREIGN KEY ( class_no,
                                                  cent_id,
                                                  mm_class_fac_roomno )
        REFERENCES mm_class ( class_no,
                              cent_id,
                              fac_roomno );

ALTER TABLE class_registration
    ADD CONSTRAINT class_payment FOREIGN KEY ( class_no,
                                               cent_id,
                                               mm_class_fac_roomno )
        REFERENCES mm_class ( class_no,
                              cent_id,
                              fac_roomno );

ALTER TABLE staffing
    ADD CONSTRAINT classtaff_staff FOREIGN KEY ( staff_id )
        REFERENCES staff ( staff_id );

ALTER TABLE mm_class
    ADD CONSTRAINT classtype_class FOREIGN KEY ( classtype_id )
        REFERENCES class_type ( classtype_id );

ALTER TABLE mm_class
    ADD CONSTRAINT facility_class FOREIGN KEY ( fac_roomno,
                                                cent_id )
        REFERENCES facility ( fac_roomno,
                              cent_id );

ALTER TABLE assessment
    ADD CONSTRAINT member_assessment FOREIGN KEY ( mem_no )
        REFERENCES mm_member ( mem_no );

ALTER TABLE attendance
    ADD CONSTRAINT member_classsession FOREIGN KEY ( mem_no )
        REFERENCES mm_member ( mem_no );

ALTER TABLE class_registration
    ADD CONSTRAINT member_payment FOREIGN KEY ( mem_no )
        REFERENCES mm_member ( mem_no );

ALTER TABLE mm_member
    ADD CONSTRAINT member_referral FOREIGN KEY ( mem_no1 )
        REFERENCES mm_member ( mem_no );

ALTER TABLE centre
    ADD CONSTRAINT relation_5 FOREIGN KEY ( staff_id )
        REFERENCES staff ( staff_id );

ALTER TABLE assessment
    ADD CONSTRAINT staff_assessment FOREIGN KEY ( staff_id )
        REFERENCES staff ( staff_id );

ALTER TABLE staff
    ADD CONSTRAINT staffrole_staff FOREIGN KEY ( staffrole_code )
        REFERENCES staff_role ( staffrole_code );

SPOOL OFF
SET ECHO OFF

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             3
-- ALTER TABLE                             29
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
